{
 "Resources": {
  "imagesBucketF1A776CF": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/imagesBucket/Resource"
   }
  },
  "imagesBucketPolicy5807A195": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "imagesBucketF1A776CF"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "imagesBucketF1A776CF",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "imagesBucketF1A776CF",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/imagesBucket/Policy/Resource"
   }
  },
  "imagesBucketAutoDeleteObjectsCustomResourceDEA0C823": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "imagesBucketF1A776CF"
    }
   },
   "DependsOn": [
    "imagesBucketPolicy5807A195"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/imagesBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-eu-west-1"
     },
     "S3Key": "a657308e723bb9460b800cb3b47dadb74e28243edfe246bf7755c45ec312eb97.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "imagesBucketF1A776CF"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.a657308e723bb9460b800cb3b47dadb74e28243edfe246bf7755c45ec312eb97",
    "aws:asset:property": "Code"
   }
  },
  "UserPool6BA7E5F2": {
   "Type": "AWS::Cognito::UserPool",
   "Properties": {
    "AccountRecoverySetting": {
     "RecoveryMechanisms": [
      {
       "Name": "verified_phone_number",
       "Priority": 1
      },
      {
       "Name": "verified_email",
       "Priority": 2
      }
     ]
    },
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": false
    },
    "AliasAttributes": [
     "email"
    ],
    "AutoVerifiedAttributes": [
     "email"
    ],
    "EmailVerificationMessage": "The verification code to your new account is {####}",
    "EmailVerificationSubject": "Verify your new account",
    "SmsVerificationMessage": "The verification code to your new account is {####}",
    "VerificationMessageTemplate": {
     "DefaultEmailOption": "CONFIRM_WITH_CODE",
     "EmailMessage": "The verification code to your new account is {####}",
     "EmailSubject": "Verify your new account",
     "SmsMessage": "The verification code to your new account is {####}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/UserPool/Resource"
   }
  },
  "UserPoolAppClientDD0407EC": {
   "Type": "AWS::Cognito::UserPoolClient",
   "Properties": {
    "AllowedOAuthFlows": [
     "implicit",
     "code"
    ],
    "AllowedOAuthFlowsUserPoolClient": true,
    "AllowedOAuthScopes": [
     "profile",
     "phone",
     "email",
     "openid",
     "aws.cognito.signin.user.admin"
    ],
    "CallbackURLs": [
     "https://example.com"
    ],
    "ExplicitAuthFlows": [
     "ALLOW_USER_PASSWORD_AUTH",
     "ALLOW_REFRESH_TOKEN_AUTH"
    ],
    "SupportedIdentityProviders": [
     "COGNITO"
    ],
    "UserPoolId": {
     "Ref": "UserPool6BA7E5F2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/UserPool/AppClient/Resource"
   }
  },
  "AuthServiceApi6F145F59": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "Authentication Service RestApi",
    "EndpointConfiguration": {
     "Types": [
      "REGIONAL"
     ]
    },
    "Name": "AuthServiceApi"
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Resource"
   }
  },
  "AuthServiceApiDeploymentE6C7B14B4252c2485374e2d1fcb8cfc0bdef0e83": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Authentication Service RestApi",
    "RestApiId": {
     "Ref": "AuthServiceApi6F145F59"
    }
   },
   "DependsOn": [
    "AuthServiceApiauthconfirmsignupOPTIONSF4E3A721",
    "AuthServiceApiauthconfirmsignupPOSTBF26C81A",
    "AuthServiceApiauthconfirmsignup53051378",
    "AuthServiceApiauthOPTIONSB7D5DB23",
    "AuthServiceApiauth4F918273",
    "AuthServiceApiauthsignupOPTIONSB3E2B959",
    "AuthServiceApiauthsignupPOST07EFAAC5",
    "AuthServiceApiauthsignup2FA1E77F",
    "AuthServiceApiOPTIONSF87E2E8C"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Deployment/Resource"
   }
  },
  "AuthServiceApiDeploymentStageprodEA127565": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "AuthServiceApiDeploymentE6C7B14B4252c2485374e2d1fcb8cfc0bdef0e83"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi6F145F59"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/DeploymentStage.prod/Resource"
   }
  },
  "AuthServiceApiOPTIONSF87E2E8C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "AuthServiceApi6F145F59",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "AuthServiceApi6F145F59"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/OPTIONS/Resource"
   }
  },
  "AuthServiceApiauth4F918273": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "AuthServiceApi6F145F59",
      "RootResourceId"
     ]
    },
    "PathPart": "auth",
    "RestApiId": {
     "Ref": "AuthServiceApi6F145F59"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/Resource"
   }
  },
  "AuthServiceApiauthOPTIONSB7D5DB23": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AuthServiceApiauth4F918273"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi6F145F59"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/OPTIONS/Resource"
   }
  },
  "AuthServiceApiauthsignup2FA1E77F": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "AuthServiceApiauth4F918273"
    },
    "PathPart": "signup",
    "RestApiId": {
     "Ref": "AuthServiceApi6F145F59"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/signup/Resource"
   }
  },
  "AuthServiceApiauthsignupOPTIONSB3E2B959": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AuthServiceApiauthsignup2FA1E77F"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi6F145F59"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/signup/OPTIONS/Resource"
   }
  },
  "AuthServiceApiauthsignupPOSTApiPermissionRestAPIStackAuthServiceApi0F27BA19POSTauthsignupBDE8AC82": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AuthServiceApiSignupFn42E54DA2",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AuthServiceApi6F145F59"
       },
       "/",
       {
        "Ref": "AuthServiceApiDeploymentStageprodEA127565"
       },
       "/POST/auth/signup"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/signup/POST/ApiPermission.RestAPIStackAuthServiceApi0F27BA19.POST..auth.signup"
   }
  },
  "AuthServiceApiauthsignupPOSTApiPermissionTestRestAPIStackAuthServiceApi0F27BA19POSTauthsignup505B8A14": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AuthServiceApiSignupFn42E54DA2",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AuthServiceApi6F145F59"
       },
       "/test-invoke-stage/POST/auth/signup"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/signup/POST/ApiPermission.Test.RestAPIStackAuthServiceApi0F27BA19.POST..auth.signup"
   }
  },
  "AuthServiceApiauthsignupPOST07EFAAC5": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AuthServiceApiSignupFn42E54DA2",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AuthServiceApiauthsignup2FA1E77F"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi6F145F59"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/signup/POST/Resource"
   }
  },
  "AuthServiceApiauthconfirmsignup53051378": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "AuthServiceApiauth4F918273"
    },
    "PathPart": "confirm_signup",
    "RestApiId": {
     "Ref": "AuthServiceApi6F145F59"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/confirm_signup/Resource"
   }
  },
  "AuthServiceApiauthconfirmsignupOPTIONSF4E3A721": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AuthServiceApiauthconfirmsignup53051378"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi6F145F59"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/confirm_signup/OPTIONS/Resource"
   }
  },
  "AuthServiceApiauthconfirmsignupPOSTApiPermissionRestAPIStackAuthServiceApi0F27BA19POSTauthconfirmsignupE180C3DD": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AuthServiceApiConfirmFn0A585E3D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AuthServiceApi6F145F59"
       },
       "/",
       {
        "Ref": "AuthServiceApiDeploymentStageprodEA127565"
       },
       "/POST/auth/confirm_signup"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/confirm_signup/POST/ApiPermission.RestAPIStackAuthServiceApi0F27BA19.POST..auth.confirm_signup"
   }
  },
  "AuthServiceApiauthconfirmsignupPOSTApiPermissionTestRestAPIStackAuthServiceApi0F27BA19POSTauthconfirmsignup0A2B0B8D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AuthServiceApiConfirmFn0A585E3D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AuthServiceApi6F145F59"
       },
       "/test-invoke-stage/POST/auth/confirm_signup"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/confirm_signup/POST/ApiPermission.Test.RestAPIStackAuthServiceApi0F27BA19.POST..auth.confirm_signup"
   }
  },
  "AuthServiceApiauthconfirmsignupPOSTBF26C81A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AuthServiceApiConfirmFn0A585E3D",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AuthServiceApiauthconfirmsignup53051378"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi6F145F59"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/AuthServiceApi/Default/auth/confirm_signup/POST/Resource"
   }
  },
  "AuthServiceApiSignupFnServiceRole449F516A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/SignupFn/ServiceRole/Resource"
   }
  },
  "AuthServiceApiSignupFn42E54DA2": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-eu-west-1"
     },
     "S3Key": "d7d66b7447beecf226f9e973c95b4e700e2d67f2740dce842724cb9669d3df43.zip"
    },
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "CLIENT_ID": {
       "Ref": "UserPoolAppClientDD0407EC"
      },
      "REGION": {
       "Ref": "AWS::Region"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "AuthServiceApiSignupFnServiceRole449F516A",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "AuthServiceApiSignupFnServiceRole449F516A"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/SignupFn/Resource",
    "aws:asset:path": "asset.d7d66b7447beecf226f9e973c95b4e700e2d67f2740dce842724cb9669d3df43",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "AuthServiceApiConfirmFnServiceRole2967189E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/ConfirmFn/ServiceRole/Resource"
   }
  },
  "AuthServiceApiConfirmFn0A585E3D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-eu-west-1"
     },
     "S3Key": "39929889c509785a923523f9cb323ce55fad53b7dc972cff1a9a0687c5b14cd0.zip"
    },
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "CLIENT_ID": {
       "Ref": "UserPoolAppClientDD0407EC"
      },
      "REGION": {
       "Ref": "AWS::Region"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "AuthServiceApiConfirmFnServiceRole2967189E",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "AuthServiceApiConfirmFnServiceRole2967189E"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AuthServiceApi/ConfirmFn/Resource",
    "aws:asset:path": "asset.39929889c509785a923523f9cb323ce55fad53b7dc972cff1a9a0687c5b14cd0",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "MoviesTable0F76A3E4": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "movieId",
      "AttributeType": "N"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "movieId",
      "KeyType": "HASH"
     }
    ],
    "TableName": "Movies"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/MoviesTable/Resource"
   }
  },
  "AccomadationTableBA1547B8": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "accId",
      "AttributeType": "N"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "accId",
      "KeyType": "HASH"
     }
    ],
    "TableName": "Accomadation"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AccomadationTable/Resource"
   }
  },
  "AccommodationPageTable81B77147": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "accId",
      "AttributeType": "N"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "accId",
      "KeyType": "HASH"
     }
    ],
    "TableName": "AccommodationPage"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AccommodationPageTable/Resource"
   }
  },
  "AddMovieFnServiceRoleB1F9B436": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AddMovieFn/ServiceRole/Resource"
   }
  },
  "AddMovieFnServiceRoleDefaultPolicy28168983": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MoviesTable0F76A3E4",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AddMovieFnServiceRoleDefaultPolicy28168983",
    "Roles": [
     {
      "Ref": "AddMovieFnServiceRoleB1F9B436"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AddMovieFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AddMovieFnA0261A58": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-eu-west-1"
     },
     "S3Key": "a582d706b56827e486dbd4d7b60d26faecd81947a0032f2db5d5464f635e89ec.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "MoviesTable0F76A3E4"
      },
      "REGION": "eu-west-1",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "AddMovieFnServiceRoleB1F9B436",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "AddMovieFnServiceRoleDefaultPolicy28168983",
    "AddMovieFnServiceRoleB1F9B436"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AddMovieFn/Resource",
    "aws:asset:path": "asset.a582d706b56827e486dbd4d7b60d26faecd81947a0032f2db5d5464f635e89ec",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "AddAccomadationFnServiceRole0CE3C60D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AddAccomadationFn/ServiceRole/Resource"
   }
  },
  "AddAccomadationFnServiceRoleDefaultPolicy90ED7414": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AccomadationTableBA1547B8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AddAccomadationFnServiceRoleDefaultPolicy90ED7414",
    "Roles": [
     {
      "Ref": "AddAccomadationFnServiceRole0CE3C60D"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AddAccomadationFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AddAccomadationFnDFD76B94": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-eu-west-1"
     },
     "S3Key": "6b842d08e9026ab28844e22f5f8e20c72aa1129df6e479a01cb5b846789dd436.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "AccomadationTableBA1547B8"
      },
      "REGION": "eu-west-1",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "AddAccomadationFnServiceRole0CE3C60D",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "AddAccomadationFnServiceRoleDefaultPolicy90ED7414",
    "AddAccomadationFnServiceRole0CE3C60D"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AddAccomadationFn/Resource",
    "aws:asset:path": "asset.6b842d08e9026ab28844e22f5f8e20c72aa1129df6e479a01cb5b846789dd436",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "AddAccomadationPageFnServiceRole336C552B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AddAccomadationPageFn/ServiceRole/Resource"
   }
  },
  "AddAccomadationPageFnServiceRoleDefaultPolicyE94F9025": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AccommodationPageTable81B77147",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AddAccomadationPageFnServiceRoleDefaultPolicyE94F9025",
    "Roles": [
     {
      "Ref": "AddAccomadationPageFnServiceRole336C552B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AddAccomadationPageFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AddAccomadationPageFn49A1EFB1": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-eu-west-1"
     },
     "S3Key": "6b842d08e9026ab28844e22f5f8e20c72aa1129df6e479a01cb5b846789dd436.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "AccommodationPageTable81B77147"
      },
      "REGION": "eu-west-1",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "AddAccomadationPageFnServiceRole336C552B",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "AddAccomadationPageFnServiceRoleDefaultPolicyE94F9025",
    "AddAccomadationPageFnServiceRole336C552B"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AddAccomadationPageFn/Resource",
    "aws:asset:path": "asset.6b842d08e9026ab28844e22f5f8e20c72aa1129df6e479a01cb5b846789dd436",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GetAllAccomadationFnServiceRoleCF142D53": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetAllAccomadationFn/ServiceRole/Resource"
   }
  },
  "GetAllAccomadationFnServiceRoleDefaultPolicyC691061A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AccomadationTableBA1547B8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetAllAccomadationFnServiceRoleDefaultPolicyC691061A",
    "Roles": [
     {
      "Ref": "GetAllAccomadationFnServiceRoleCF142D53"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetAllAccomadationFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetAllAccomadationFnA8F52375": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-eu-west-1"
     },
     "S3Key": "eaddc32d07e118607340a643ef123120100ce543245d6725abf5b9097fcd4adc.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "AccomadationTableBA1547B8"
      },
      "REGION": "eu-west-1",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "GetAllAccomadationFnServiceRoleCF142D53",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "GetAllAccomadationFnServiceRoleDefaultPolicyC691061A",
    "GetAllAccomadationFnServiceRoleCF142D53"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetAllAccomadationFn/Resource",
    "aws:asset:path": "asset.eaddc32d07e118607340a643ef123120100ce543245d6725abf5b9097fcd4adc",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "MovieCastTableE4F7E4C8": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "movieId",
      "AttributeType": "N"
     },
     {
      "AttributeName": "actorName",
      "AttributeType": "S"
     },
     {
      "AttributeName": "roleName",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "movieId",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "actorName",
      "KeyType": "RANGE"
     }
    ],
    "LocalSecondaryIndexes": [
     {
      "IndexName": "roleIx",
      "KeySchema": [
       {
        "AttributeName": "movieId",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "roleName",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "TableName": "MovieCast"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/MovieCastTable/Resource"
   }
  },
  "MovieReviewsTable92783803": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "movieId",
      "AttributeType": "N"
     },
     {
      "AttributeName": "reviewerName",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "movieId",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "reviewerName",
      "KeyType": "RANGE"
     }
    ],
    "TableName": "MovieReviews"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/MovieReviewsTable/Resource"
   }
  },
  "newReviewFnServiceRole77C80065": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/newReviewFn/ServiceRole/Resource"
   }
  },
  "newReviewFnServiceRoleDefaultPolicyD6B74613": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MovieReviewsTable92783803",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "newReviewFnServiceRoleDefaultPolicyD6B74613",
    "Roles": [
     {
      "Ref": "newReviewFnServiceRole77C80065"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/newReviewFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "newReviewFnD1EC325D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-eu-west-1"
     },
     "S3Key": "7ec3894351645391c42175a0587d1148a6688470eddaed2d5d2691d5e0612718.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "MovieReviewsTable92783803"
      },
      "REGION": "eu-west-1",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "newReviewFnServiceRole77C80065",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "newReviewFnServiceRoleDefaultPolicyD6B74613",
    "newReviewFnServiceRole77C80065"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/newReviewFn/Resource",
    "aws:asset:path": "asset.7ec3894351645391c42175a0587d1148a6688470eddaed2d5d2691d5e0612718",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GetMovieByIdFnServiceRole129ED770": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetMovieByIdFn/ServiceRole/Resource"
   }
  },
  "GetMovieByIdFnServiceRoleDefaultPolicy0B2C84C0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MoviesTable0F76A3E4",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetMovieByIdFnServiceRoleDefaultPolicy0B2C84C0",
    "Roles": [
     {
      "Ref": "GetMovieByIdFnServiceRole129ED770"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetMovieByIdFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetMovieByIdFn429FC61F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-eu-west-1"
     },
     "S3Key": "993dfe9e92af91ee1dead5ec4bcf32125465d94fce0052ff758a7167d963fb0f.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "MoviesTable0F76A3E4"
      },
      "REGION": "eu-west-1",
      "CAST": "",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "GetMovieByIdFnServiceRole129ED770",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "GetMovieByIdFnServiceRoleDefaultPolicy0B2C84C0",
    "GetMovieByIdFnServiceRole129ED770"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetMovieByIdFn/Resource",
    "aws:asset:path": "asset.993dfe9e92af91ee1dead5ec4bcf32125465d94fce0052ff758a7167d963fb0f",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GetAccomadationByIdFnServiceRoleCCA20C83": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetAccomadationByIdFn/ServiceRole/Resource"
   }
  },
  "GetAccomadationByIdFn03EE840F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-eu-west-1"
     },
     "S3Key": "c33a84a9b5aa45b3426362d013622eb2897fc67fa63ec1ffcce0235553b35d94.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "AccomadationTableBA1547B8"
      },
      "REGION": "eu-west-1",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "GetAccomadationByIdFnServiceRoleCCA20C83",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "GetAccomadationByIdFnServiceRoleCCA20C83"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetAccomadationByIdFn/Resource",
    "aws:asset:path": "asset.c33a84a9b5aa45b3426362d013622eb2897fc67fa63ec1ffcce0235553b35d94",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GetAccomadationPageByIdFnServiceRole4C0FAD56": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetAccomadationPageByIdFn/ServiceRole/Resource"
   }
  },
  "GetAccomadationPageByIdFn5BD8AC63": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-eu-west-1"
     },
     "S3Key": "c33a84a9b5aa45b3426362d013622eb2897fc67fa63ec1ffcce0235553b35d94.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "AccommodationPageTable81B77147"
      },
      "REGION": "eu-west-1",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "GetAccomadationPageByIdFnServiceRole4C0FAD56",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "GetAccomadationPageByIdFnServiceRole4C0FAD56"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetAccomadationPageByIdFn/Resource",
    "aws:asset:path": "asset.c33a84a9b5aa45b3426362d013622eb2897fc67fa63ec1ffcce0235553b35d94",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "deleteMovieByIdFnServiceRoleA4B8D8B3": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/deleteMovieByIdFn/ServiceRole/Resource"
   }
  },
  "deleteMovieByIdFnServiceRoleDefaultPolicyD688F826": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MoviesTable0F76A3E4",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "deleteMovieByIdFnServiceRoleDefaultPolicyD688F826",
    "Roles": [
     {
      "Ref": "deleteMovieByIdFnServiceRoleA4B8D8B3"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/deleteMovieByIdFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "deleteMovieByIdFnEC435EDE": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-eu-west-1"
     },
     "S3Key": "c4757b7e5aa537179e6fa085d5e678f41fee0375d6bd26ec5bf3a525ac11fdd9.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "MoviesTable0F76A3E4"
      },
      "REGION": "eu-west-1",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "deleteMovieByIdFnServiceRoleA4B8D8B3",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "deleteMovieByIdFnServiceRoleDefaultPolicyD688F826",
    "deleteMovieByIdFnServiceRoleA4B8D8B3"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/deleteMovieByIdFn/Resource",
    "aws:asset:path": "asset.c4757b7e5aa537179e6fa085d5e678f41fee0375d6bd26ec5bf3a525ac11fdd9",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GetAllMoviesFnServiceRole0FF7E3CB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetAllMoviesFn/ServiceRole/Resource"
   }
  },
  "GetAllMoviesFnServiceRoleDefaultPolicy2E8AB9F7": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MoviesTable0F76A3E4",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetAllMoviesFnServiceRoleDefaultPolicy2E8AB9F7",
    "Roles": [
     {
      "Ref": "GetAllMoviesFnServiceRole0FF7E3CB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetAllMoviesFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetAllMoviesFnD14CC45A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-eu-west-1"
     },
     "S3Key": "be414d52a82a5515df0bdc763a813bc7086b4e2bfcaba3eaab6df2f1a904c12a.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "MoviesTable0F76A3E4"
      },
      "REGION": "eu-west-1",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "GetAllMoviesFnServiceRole0FF7E3CB",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "GetAllMoviesFnServiceRoleDefaultPolicy2E8AB9F7",
    "GetAllMoviesFnServiceRole0FF7E3CB"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetAllMoviesFn/Resource",
    "aws:asset:path": "asset.be414d52a82a5515df0bdc763a813bc7086b4e2bfcaba3eaab6df2f1a904c12a",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GetCastMemberFnServiceRoleE3D31A5A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetCastMemberFn/ServiceRole/Resource"
   }
  },
  "GetCastMemberFnServiceRoleDefaultPolicyE149AAD0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MovieCastTableE4F7E4C8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "MovieCastTableE4F7E4C8",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetCastMemberFnServiceRoleDefaultPolicyE149AAD0",
    "Roles": [
     {
      "Ref": "GetCastMemberFnServiceRoleE3D31A5A"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetCastMemberFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetCastMemberFn1BEFFC9C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-eu-west-1"
     },
     "S3Key": "bfbe2fbd5c520d8bd2a7f9ff06f1c4cbac178c7603dc487cf14375561a07bb84.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "MovieCastTableE4F7E4C8"
      },
      "REGION": "eu-west-1",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "GetCastMemberFnServiceRoleE3D31A5A",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "GetCastMemberFnServiceRoleDefaultPolicyE149AAD0",
    "GetCastMemberFnServiceRoleE3D31A5A"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/GetCastMemberFn/Resource",
    "aws:asset:path": "asset.bfbe2fbd5c520d8bd2a7f9ff06f1c4cbac178c7603dc487cf14375561a07bb84",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "getReviewsForMovieFnServiceRole20253435": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/getReviewsForMovieFn/ServiceRole/Resource"
   }
  },
  "getReviewsForMovieFnServiceRoleDefaultPolicyC5BC672A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MovieReviewsTable92783803",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "getReviewsForMovieFnServiceRoleDefaultPolicyC5BC672A",
    "Roles": [
     {
      "Ref": "getReviewsForMovieFnServiceRole20253435"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/getReviewsForMovieFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "getReviewsForMovieFn3C63D720": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-eu-west-1"
     },
     "S3Key": "d296a7d4e60486eb371137689a4e07896c31ae099d5615661eac0169bb3549b7.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "MovieReviewsTable92783803"
      },
      "REGION": "eu-west-1",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "getReviewsForMovieFnServiceRole20253435",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "getReviewsForMovieFnServiceRoleDefaultPolicyC5BC672A",
    "getReviewsForMovieFnServiceRole20253435"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/getReviewsForMovieFn/Resource",
    "aws:asset:path": "asset.d296a7d4e60486eb371137689a4e07896c31ae099d5615661eac0169bb3549b7",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "imagesServiceRoleC8C680F5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/images/ServiceRole/Resource"
   }
  },
  "imagesServiceRoleDefaultPolicy2414A992": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "imagesBucketF1A776CF",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "imagesBucketF1A776CF",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "imagesServiceRoleDefaultPolicy2414A992",
    "Roles": [
     {
      "Ref": "imagesServiceRoleC8C680F5"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/images/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "images9BF4DCD5": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-eu-west-1"
     },
     "S3Key": "dd68c7b74c032c607f74d5254cd3ccbbaeabb3899852931b744a42b6ad28fa26.zip"
    },
    "Environment": {
     "Variables": {
      "BUCKET_NAME": "imagesBucket",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "imagesServiceRoleC8C680F5",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "imagesServiceRoleDefaultPolicy2414A992",
    "imagesServiceRoleC8C680F5"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/images/Resource",
    "aws:asset:path": "asset.dd68c7b74c032c607f74d5254cd3ccbbaeabb3899852931b744a42b6ad28fa26",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "getAllReviewsByReviewerNameServiceRole3ED1D777": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/getAllReviewsByReviewerName/ServiceRole/Resource"
   }
  },
  "getAllReviewsByReviewerNameServiceRoleDefaultPolicyFCDF7DD7": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MovieReviewsTable92783803",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "getAllReviewsByReviewerNameServiceRoleDefaultPolicyFCDF7DD7",
    "Roles": [
     {
      "Ref": "getAllReviewsByReviewerNameServiceRole3ED1D777"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/getAllReviewsByReviewerName/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "getAllReviewsByReviewerName4664B1BE": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-eu-west-1"
     },
     "S3Key": "8dd1b6a944497244eb48a9efe27fc1a91827eb49fe49304d780b99be80b2e755.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "MovieReviewsTable92783803"
      },
      "REGION": "eu-west-1",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "getAllReviewsByReviewerNameServiceRole3ED1D777",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "getAllReviewsByReviewerNameServiceRoleDefaultPolicyFCDF7DD7",
    "getAllReviewsByReviewerNameServiceRole3ED1D777"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/getAllReviewsByReviewerName/Resource",
    "aws:asset:path": "asset.8dd1b6a944497244eb48a9efe27fc1a91827eb49fe49304d780b99be80b2e755",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "moviesddbInitDataA13BB07E": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"service\":\"DynamoDB\",\"action\":\"batchWriteItem\",\"parameters\":{\"RequestItems\":{\"",
       {
        "Ref": "MoviesTable0F76A3E4"
       },
       "\":[{\"PutRequest\":{\"Item\":{\"movieId\":{\"N\":\"1234\"},\"genre_ids\":{\"L\":[{\"N\":\"28\"},{\"N\":\"14\"},{\"N\":\"32\"}]},\"original_language\":{\"S\":\"en\"},\"overview\":{\"S\":\"Every six years, an ancient order of jiu-jitsu fighters joins forces to battle a vicious race of alien invaders. But when a celebrated war hero goes down in defeat, the fate of the planet and mankind hangs in the balance.\"},\"popularity\":{\"N\":\"2633.943\"},\"release_date\":{\"S\":\"2020-11-20\"},\"title\":{\"S\":\"Title 1234\"},\"video\":{\"BOOL\":false},\"vote_average\":{\"N\":\"5.9\"},\"vote_count\":{\"N\":\"111\"}}}},{\"PutRequest\":{\"Item\":{\"movieId\":{\"N\":\"4567\"},\"genre_ids\":{\"L\":[{\"N\":\"28\"},{\"N\":\"14\"},{\"N\":\"32\"}]},\"original_language\":{\"S\":\"fr\"},\"overview\":{\"S\":\"Every six years, an ancient order of jiu-jitsu fighters joins forces to battle a vicious race of alien invaders. But when a celebrated war hero goes down in defeat, the fate of the planet and mankind hangs in the balance.\"},\"popularity\":{\"N\":\"2633.943\"},\"release_date\":{\"S\":\"2020-11-20\"},\"title\":{\"S\":\"Title 1234\"},\"video\":{\"BOOL\":false},\"vote_average\":{\"N\":\"5.9\"},\"vote_count\":{\"N\":\"111\"}}}},{\"PutRequest\":{\"Item\":{\"movieId\":{\"N\":\"2345\"},\"genre_ids\":{\"L\":[{\"N\":\"28\"},{\"N\":\"14\"},{\"N\":\"32\"}]},\"original_language\":{\"S\":\"en\"},\"overview\":{\"S\":\"Every six years, an ancient order of jiu-jitsu fighters joins forces to battle a vicious race of alien invaders. But when a celebrated war hero goes down in defeat, the fate of the planet and mankind hangs in the balance.\"},\"popularity\":{\"N\":\"2633.943\"},\"release_date\":{\"S\":\"2020-11-21\"},\"title\":{\"S\":\"Title 2345\"},\"video\":{\"BOOL\":false},\"vote_average\":{\"N\":\"5.9\"},\"vote_count\":{\"N\":\"111\"}}}},{\"PutRequest\":{\"Item\":{\"movieId\":{\"N\":\"3456\"},\"genre_ids\":{\"L\":[{\"N\":\"28\"},{\"N\":\"14\"},{\"N\":\"32\"}]},\"original_language\":{\"S\":\"en\"},\"overview\":{\"S\":\"Every six years, an ancient order of jiu-jitsu fighters joins forces to battle a vicious race of alien invaders. But when a celebrated war hero goes down in defeat, the fate of the planet and mankind hangs in the balance.\"},\"popularity\":{\"N\":\"2633.943\"},\"release_date\":{\"S\":\"2020-11-21\"},\"title\":{\"S\":\"Title 3456\"},\"video\":{\"BOOL\":false},\"vote_average\":{\"N\":\"5.9\"},\"vote_count\":{\"N\":\"111\"}}}}],\"",
       {
        "Ref": "MovieCastTableE4F7E4C8"
       },
       "\":[{\"PutRequest\":{\"Item\":{\"movieId\":{\"N\":\"1234\"},\"actorName\":{\"S\":\"Joe Bloggs\"},\"roleName\":{\"S\":\"Male Character 1\"},\"roleDescription\":{\"S\":\"description of character 1\"}}}},{\"PutRequest\":{\"Item\":{\"movieId\":{\"N\":\"1234\"},\"actorName\":{\"S\":\"Alice Broggs\"},\"roleName\":{\"S\":\"Female Character 1\"},\"roleDescription\":{\"S\":\"description of character 2\"}}}},{\"PutRequest\":{\"Item\":{\"movieId\":{\"N\":\"1234\"},\"actorName\":{\"S\":\"Joe Cloggs\"},\"roleName\":{\"S\":\"Male Character 2\"},\"roleDescription\":{\"S\":\"description of character 3\"}}}},{\"PutRequest\":{\"Item\":{\"movieId\":{\"N\":\"2345\"},\"actorName\":{\"S\":\"Joe Bloggs\"},\"roleName\":{\"S\":\"Male Character 1\"},\"roleDescription\":{\"S\":\"description of character 3\"}}}}]}},\"physicalResourceId\":{\"id\":\"moviesddbInitData\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "moviesddbInitDataCustomResourcePolicyA35F01DC"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/moviesddbInitData/Resource/Default"
   }
  },
  "moviesddbInitDataCustomResourcePolicyA35F01DC": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:BatchWriteItem",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AccomadationTableBA1547B8",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "MovieCastTableE4F7E4C8",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "MovieReviewsTable92783803",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "MoviesTable0F76A3E4",
          "Arn"
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "moviesddbInitDataCustomResourcePolicyA35F01DC",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/moviesddbInitData/CustomResourcePolicy/Resource"
   }
  },
  "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource"
   }
  },
  "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-eu-west-1"
     },
     "S3Key": "099a3112386fa620b3069790dcf92c8e64bb5341760a8b0a76bfa843f8ad41df.zip"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 120
   },
   "DependsOn": [
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/AWS679f53fac002430cb0da5b7982bd2287/Resource",
    "aws:asset:path": "asset.099a3112386fa620b3069790dcf92c8e64bb5341760a8b0a76bfa843f8ad41df",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "RestAPI1CC12F26": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "demo api",
    "Name": "RestAPI"
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Resource"
   }
  },
  "RestAPIDeploymentD35A538008a50462baa766851a952985f400fd2b": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "demo api",
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "DependsOn": [
    "RestAPIaccomadationaccIdGETCFDB57FA",
    "RestAPIaccomadationaccIdOPTIONS3CD1EC31",
    "RestAPIaccomadationaccId3FF58A6C",
    "RestAPIaccomadationGETD757D71C",
    "RestAPIaccomadationOPTIONS469EC635",
    "RestAPIaccomadationPOST6740B514",
    "RestAPIaccomadation883506D6",
    "RestAPIaccomadationPageGETBBDFE858",
    "RestAPIaccomadationPageOPTIONSDC072581",
    "RestAPIaccomadationPagePOST6A989741",
    "RestAPIaccomadationPage9601CCFB",
    "RestAPImoviesmovieIdGET6B517F00",
    "RestAPImoviesmovieIdOPTIONSC1FB0512",
    "RestAPImoviesmovieId3DE0D522",
    "RestAPImoviesmovieIdreviewsGETE34AC9B8",
    "RestAPImoviesmovieIdreviewsOPTIONSCFDDE4D4",
    "RestAPImoviesmovieIdreviews5115F3C9",
    "RestAPImoviesDELETE4D6D3942",
    "RestAPImoviesGET8F06310F",
    "RestAPImoviesOPTIONS1E02A856",
    "RestAPImoviesPOSTC027C064",
    "RestAPImoviesA51CB040",
    "RestAPImoviesreviewsreviewerNameGETA4FCAA45",
    "RestAPImoviesreviewsreviewerNameOPTIONS1AF2568C",
    "RestAPImoviesreviewsreviewerNameD70FBF61",
    "RestAPImoviesreviewsOPTIONSDBDC2016",
    "RestAPImoviesreviewsPOST7433BE10",
    "RestAPImoviesreviews6A583905",
    "RestAPIOPTIONS3271A002",
    "RestAPIuploadOPTIONSD1C5CF33",
    "RestAPIuploadPOST5BC9EC48",
    "RestAPIupload5E81004C"
   ],
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Deployment/Resource"
   }
  },
  "RestAPIDeploymentStagedev1DE74094": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "RestAPIDeploymentD35A538008a50462baa766851a952985f400fd2b"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    },
    "StageName": "dev"
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/DeploymentStage.dev/Resource"
   }
  },
  "RestAPIOPTIONS3271A002": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "RestAPI1CC12F26",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/OPTIONS/Resource"
   }
  },
  "RestAPIaccomadation883506D6": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "RestAPI1CC12F26",
      "RootResourceId"
     ]
    },
    "PathPart": "accomadation",
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/accomadation/Resource"
   }
  },
  "RestAPIaccomadationOPTIONS469EC635": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "RestAPIaccomadation883506D6"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/accomadation/OPTIONS/Resource"
   }
  },
  "RestAPIaccomadationPOSTApiPermissionRestAPIStackRestAPIBD91D303POSTaccomadation86745433": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AddAccomadationFnDFD76B94",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/",
       {
        "Ref": "RestAPIDeploymentStagedev1DE74094"
       },
       "/POST/accomadation"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/accomadation/POST/ApiPermission.RestAPIStackRestAPIBD91D303.POST..accomadation"
   }
  },
  "RestAPIaccomadationPOSTApiPermissionTestRestAPIStackRestAPIBD91D303POSTaccomadationB8AC614E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AddAccomadationFnDFD76B94",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/test-invoke-stage/POST/accomadation"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/accomadation/POST/ApiPermission.Test.RestAPIStackRestAPIBD91D303.POST..accomadation"
   }
  },
  "RestAPIaccomadationPOST6740B514": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AddAccomadationFnDFD76B94",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "RestAPIaccomadation883506D6"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/accomadation/POST/Resource"
   }
  },
  "RestAPIaccomadationGETApiPermissionRestAPIStackRestAPIBD91D303GETaccomadationBDCFC84F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetAllAccomadationFnA8F52375",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/",
       {
        "Ref": "RestAPIDeploymentStagedev1DE74094"
       },
       "/GET/accomadation"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/accomadation/GET/ApiPermission.RestAPIStackRestAPIBD91D303.GET..accomadation"
   }
  },
  "RestAPIaccomadationGETApiPermissionTestRestAPIStackRestAPIBD91D303GETaccomadationAF872DE4": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetAllAccomadationFnA8F52375",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/test-invoke-stage/GET/accomadation"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/accomadation/GET/ApiPermission.Test.RestAPIStackRestAPIBD91D303.GET..accomadation"
   }
  },
  "RestAPIaccomadationGETD757D71C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetAllAccomadationFnA8F52375",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "RestAPIaccomadation883506D6"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/accomadation/GET/Resource"
   }
  },
  "RestAPIaccomadationaccId3FF58A6C": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "RestAPIaccomadation883506D6"
    },
    "PathPart": "{accId}",
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/accomadation/{accId}/Resource"
   }
  },
  "RestAPIaccomadationaccIdOPTIONS3CD1EC31": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "RestAPIaccomadationaccId3FF58A6C"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/accomadation/{accId}/OPTIONS/Resource"
   }
  },
  "RestAPIaccomadationaccIdGETApiPermissionRestAPIStackRestAPIBD91D303GETaccomadationaccId93293C1F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetAccomadationByIdFn03EE840F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/",
       {
        "Ref": "RestAPIDeploymentStagedev1DE74094"
       },
       "/GET/accomadation/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/accomadation/{accId}/GET/ApiPermission.RestAPIStackRestAPIBD91D303.GET..accomadation.{accId}"
   }
  },
  "RestAPIaccomadationaccIdGETApiPermissionTestRestAPIStackRestAPIBD91D303GETaccomadationaccId03848592": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetAccomadationByIdFn03EE840F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/test-invoke-stage/GET/accomadation/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/accomadation/{accId}/GET/ApiPermission.Test.RestAPIStackRestAPIBD91D303.GET..accomadation.{accId}"
   }
  },
  "RestAPIaccomadationaccIdGETCFDB57FA": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetAccomadationByIdFn03EE840F",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "RestAPIaccomadationaccId3FF58A6C"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/accomadation/{accId}/GET/Resource"
   }
  },
  "RestAPIupload5E81004C": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "RestAPI1CC12F26",
      "RootResourceId"
     ]
    },
    "PathPart": "upload",
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/upload/Resource"
   }
  },
  "RestAPIuploadOPTIONSD1C5CF33": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "RestAPIupload5E81004C"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/upload/OPTIONS/Resource"
   }
  },
  "RestAPIuploadPOSTApiPermissionRestAPIStackRestAPIBD91D303POSTupload6DD860FA": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "images9BF4DCD5",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/",
       {
        "Ref": "RestAPIDeploymentStagedev1DE74094"
       },
       "/POST/upload"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/upload/POST/ApiPermission.RestAPIStackRestAPIBD91D303.POST..upload"
   }
  },
  "RestAPIuploadPOSTApiPermissionTestRestAPIStackRestAPIBD91D303POSTuploadB6D040E9": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "images9BF4DCD5",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/test-invoke-stage/POST/upload"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/upload/POST/ApiPermission.Test.RestAPIStackRestAPIBD91D303.POST..upload"
   }
  },
  "RestAPIuploadPOST5BC9EC48": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "images9BF4DCD5",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "RestAPIupload5E81004C"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/upload/POST/Resource"
   }
  },
  "RestAPIaccomadationPage9601CCFB": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "RestAPI1CC12F26",
      "RootResourceId"
     ]
    },
    "PathPart": "accomadationPage",
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/accomadationPage/Resource"
   }
  },
  "RestAPIaccomadationPageOPTIONSDC072581": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "RestAPIaccomadationPage9601CCFB"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/accomadationPage/OPTIONS/Resource"
   }
  },
  "RestAPIaccomadationPagePOSTApiPermissionRestAPIStackRestAPIBD91D303POSTaccomadationPageA8ED8FC0": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AddAccomadationPageFn49A1EFB1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/",
       {
        "Ref": "RestAPIDeploymentStagedev1DE74094"
       },
       "/POST/accomadationPage"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/accomadationPage/POST/ApiPermission.RestAPIStackRestAPIBD91D303.POST..accomadationPage"
   }
  },
  "RestAPIaccomadationPagePOSTApiPermissionTestRestAPIStackRestAPIBD91D303POSTaccomadationPageD725AE64": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AddAccomadationPageFn49A1EFB1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/test-invoke-stage/POST/accomadationPage"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/accomadationPage/POST/ApiPermission.Test.RestAPIStackRestAPIBD91D303.POST..accomadationPage"
   }
  },
  "RestAPIaccomadationPagePOST6A989741": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AddAccomadationPageFn49A1EFB1",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "RestAPIaccomadationPage9601CCFB"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/accomadationPage/POST/Resource"
   }
  },
  "RestAPIaccomadationPageGETApiPermissionRestAPIStackRestAPIBD91D303GETaccomadationPage61218D7C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetAccomadationPageByIdFn5BD8AC63",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/",
       {
        "Ref": "RestAPIDeploymentStagedev1DE74094"
       },
       "/GET/accomadationPage"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/accomadationPage/GET/ApiPermission.RestAPIStackRestAPIBD91D303.GET..accomadationPage"
   }
  },
  "RestAPIaccomadationPageGETApiPermissionTestRestAPIStackRestAPIBD91D303GETaccomadationPage60ED8076": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetAccomadationPageByIdFn5BD8AC63",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/test-invoke-stage/GET/accomadationPage"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/accomadationPage/GET/ApiPermission.Test.RestAPIStackRestAPIBD91D303.GET..accomadationPage"
   }
  },
  "RestAPIaccomadationPageGETBBDFE858": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetAccomadationPageByIdFn5BD8AC63",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "RestAPIaccomadationPage9601CCFB"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/accomadationPage/GET/Resource"
   }
  },
  "RestAPImoviesA51CB040": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "RestAPI1CC12F26",
      "RootResourceId"
     ]
    },
    "PathPart": "movies",
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/Resource"
   }
  },
  "RestAPImoviesOPTIONS1E02A856": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "RestAPImoviesA51CB040"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/OPTIONS/Resource"
   }
  },
  "RestAPImoviesGETApiPermissionRestAPIStackRestAPIBD91D303GETmovies4E6039D0": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetAllMoviesFnD14CC45A",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/",
       {
        "Ref": "RestAPIDeploymentStagedev1DE74094"
       },
       "/GET/movies"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/GET/ApiPermission.RestAPIStackRestAPIBD91D303.GET..movies"
   }
  },
  "RestAPImoviesGETApiPermissionTestRestAPIStackRestAPIBD91D303GETmovies1D7D11A0": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetAllMoviesFnD14CC45A",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/test-invoke-stage/GET/movies"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/GET/ApiPermission.Test.RestAPIStackRestAPIBD91D303.GET..movies"
   }
  },
  "RestAPImoviesGET8F06310F": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetAllMoviesFnD14CC45A",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "RestAPImoviesA51CB040"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/GET/Resource"
   }
  },
  "RestAPImoviesPOSTApiPermissionRestAPIStackRestAPIBD91D303POSTmovies8CD10A5C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AddMovieFnA0261A58",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/",
       {
        "Ref": "RestAPIDeploymentStagedev1DE74094"
       },
       "/POST/movies"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/POST/ApiPermission.RestAPIStackRestAPIBD91D303.POST..movies"
   }
  },
  "RestAPImoviesPOSTApiPermissionTestRestAPIStackRestAPIBD91D303POSTmovies2C903EBE": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AddMovieFnA0261A58",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/test-invoke-stage/POST/movies"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/POST/ApiPermission.Test.RestAPIStackRestAPIBD91D303.POST..movies"
   }
  },
  "RestAPImoviesPOSTC027C064": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AddMovieFnA0261A58",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "RestAPImoviesA51CB040"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/POST/Resource"
   }
  },
  "RestAPImoviesDELETEApiPermissionRestAPIStackRestAPIBD91D303DELETEmovies999BC3ED": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "deleteMovieByIdFnEC435EDE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/",
       {
        "Ref": "RestAPIDeploymentStagedev1DE74094"
       },
       "/DELETE/movies"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/DELETE/ApiPermission.RestAPIStackRestAPIBD91D303.DELETE..movies"
   }
  },
  "RestAPImoviesDELETEApiPermissionTestRestAPIStackRestAPIBD91D303DELETEmoviesE63125BF": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "deleteMovieByIdFnEC435EDE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/test-invoke-stage/DELETE/movies"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/DELETE/ApiPermission.Test.RestAPIStackRestAPIBD91D303.DELETE..movies"
   }
  },
  "RestAPImoviesDELETE4D6D3942": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "DELETE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "deleteMovieByIdFnEC435EDE",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "RestAPImoviesA51CB040"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/DELETE/Resource"
   }
  },
  "RestAPImoviesreviews6A583905": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "RestAPImoviesA51CB040"
    },
    "PathPart": "reviews",
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/reviews/Resource"
   }
  },
  "RestAPImoviesreviewsOPTIONSDBDC2016": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "RestAPImoviesreviews6A583905"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/reviews/OPTIONS/Resource"
   }
  },
  "RestAPImoviesreviewsPOSTApiPermissionRestAPIStackRestAPIBD91D303POSTmoviesreviewsE1659D41": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "newReviewFnD1EC325D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/",
       {
        "Ref": "RestAPIDeploymentStagedev1DE74094"
       },
       "/POST/movies/reviews"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/reviews/POST/ApiPermission.RestAPIStackRestAPIBD91D303.POST..movies.reviews"
   }
  },
  "RestAPImoviesreviewsPOSTApiPermissionTestRestAPIStackRestAPIBD91D303POSTmoviesreviewsEFDF6EB7": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "newReviewFnD1EC325D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/test-invoke-stage/POST/movies/reviews"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/reviews/POST/ApiPermission.Test.RestAPIStackRestAPIBD91D303.POST..movies.reviews"
   }
  },
  "RestAPImoviesreviewsPOST7433BE10": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "newReviewFnD1EC325D",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "RestAPImoviesreviews6A583905"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/reviews/POST/Resource"
   }
  },
  "RestAPImoviesreviewsreviewerNameD70FBF61": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "RestAPImoviesreviews6A583905"
    },
    "PathPart": "{reviewerName}",
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/reviews/{reviewerName}/Resource"
   }
  },
  "RestAPImoviesreviewsreviewerNameOPTIONS1AF2568C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "RestAPImoviesreviewsreviewerNameD70FBF61"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/reviews/{reviewerName}/OPTIONS/Resource"
   }
  },
  "RestAPImoviesreviewsreviewerNameGETApiPermissionRestAPIStackRestAPIBD91D303GETmoviesreviewsreviewerName9A87A245": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getAllReviewsByReviewerName4664B1BE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/",
       {
        "Ref": "RestAPIDeploymentStagedev1DE74094"
       },
       "/GET/movies/reviews/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/reviews/{reviewerName}/GET/ApiPermission.RestAPIStackRestAPIBD91D303.GET..movies.reviews.{reviewerName}"
   }
  },
  "RestAPImoviesreviewsreviewerNameGETApiPermissionTestRestAPIStackRestAPIBD91D303GETmoviesreviewsreviewerNameC6F6DB5E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getAllReviewsByReviewerName4664B1BE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/test-invoke-stage/GET/movies/reviews/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/reviews/{reviewerName}/GET/ApiPermission.Test.RestAPIStackRestAPIBD91D303.GET..movies.reviews.{reviewerName}"
   }
  },
  "RestAPImoviesreviewsreviewerNameGETA4FCAA45": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "getAllReviewsByReviewerName4664B1BE",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "RestAPImoviesreviewsreviewerNameD70FBF61"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/reviews/{reviewerName}/GET/Resource"
   }
  },
  "RestAPImoviesmovieId3DE0D522": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "RestAPImoviesA51CB040"
    },
    "PathPart": "{movieId}",
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/{movieId}/Resource"
   }
  },
  "RestAPImoviesmovieIdOPTIONSC1FB0512": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "RestAPImoviesmovieId3DE0D522"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/{movieId}/OPTIONS/Resource"
   }
  },
  "RestAPImoviesmovieIdGETApiPermissionRestAPIStackRestAPIBD91D303GETmoviesmovieId92836E56": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetMovieByIdFn429FC61F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/",
       {
        "Ref": "RestAPIDeploymentStagedev1DE74094"
       },
       "/GET/movies/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/{movieId}/GET/ApiPermission.RestAPIStackRestAPIBD91D303.GET..movies.{movieId}"
   }
  },
  "RestAPImoviesmovieIdGETApiPermissionTestRestAPIStackRestAPIBD91D303GETmoviesmovieId290552F1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetMovieByIdFn429FC61F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/test-invoke-stage/GET/movies/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/{movieId}/GET/ApiPermission.Test.RestAPIStackRestAPIBD91D303.GET..movies.{movieId}"
   }
  },
  "RestAPImoviesmovieIdGET6B517F00": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetMovieByIdFn429FC61F",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "RestAPImoviesmovieId3DE0D522"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/{movieId}/GET/Resource"
   }
  },
  "RestAPImoviesmovieIdreviews5115F3C9": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "RestAPImoviesmovieId3DE0D522"
    },
    "PathPart": "reviews",
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/{movieId}/reviews/Resource"
   }
  },
  "RestAPImoviesmovieIdreviewsOPTIONSCFDDE4D4": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "RestAPImoviesmovieIdreviews5115F3C9"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/{movieId}/reviews/OPTIONS/Resource"
   }
  },
  "RestAPImoviesmovieIdreviewsGETApiPermissionRestAPIStackRestAPIBD91D303GETmoviesmovieIdreviews544E2FDE": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getReviewsForMovieFn3C63D720",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/",
       {
        "Ref": "RestAPIDeploymentStagedev1DE74094"
       },
       "/GET/movies/*/reviews"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/{movieId}/reviews/GET/ApiPermission.RestAPIStackRestAPIBD91D303.GET..movies.{movieId}.reviews"
   }
  },
  "RestAPImoviesmovieIdreviewsGETApiPermissionTestRestAPIStackRestAPIBD91D303GETmoviesmovieIdreviews7DC87E12": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getReviewsForMovieFn3C63D720",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "RestAPI1CC12F26"
       },
       "/test-invoke-stage/GET/movies/*/reviews"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/{movieId}/reviews/GET/ApiPermission.Test.RestAPIStackRestAPIBD91D303.GET..movies.{movieId}.reviews"
   }
  },
  "RestAPImoviesmovieIdreviewsGETE34AC9B8": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "getReviewsForMovieFn3C63D720",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "RestAPImoviesmovieIdreviews5115F3C9"
    },
    "RestApiId": {
     "Ref": "RestAPI1CC12F26"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/RestAPI/Default/movies/{movieId}/reviews/GET/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/22STW/DIAyGf8vulH300mvbabdtUbudIwpeRktwhEmrKOK/D0LSdNNOfvz6tcEkT3y14g934kILqU4Low+833shTyxKZU9L3m9aeQLPtl92pBwKNFp2szzmOdkIgsAkVlZ75P0ngSsQTXJfeYKt0WD9bSkrgYlGV8LDRXS83wH5daOTbcJnaAx29dh8k8UFKkhahujH1klIl2Kv4L9RpeJIU3WcPHBgRtQHJXgfxQJcrYk02mR5aa30iffaVgY8zsoEU3dpUcGR+NsQrjYt6rgOmnxiivNTZgqMlqUgAk98nQJTnRU1qvhxPsQhdw4QAtu25LH+b4s/pcLhWStwbBiZniZukPzvrW9aPz+EHNpKN+bxDhf6PSqwtBo/0v35ccUf0x90JK0XrrVe18B3Of4ADyYfi10CAAA="
   },
   "Metadata": {
    "aws:cdk:path": "RestAPIStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "AuthServiceApiEndpointBBC1D636": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "AuthServiceApi6F145F59"
      },
      ".execute-api.eu-west-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "AuthServiceApiDeploymentStageprodEA127565"
      },
      "/"
     ]
    ]
   }
  },
  "RestAPIEndpointB14C3C54": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "RestAPI1CC12F26"
      },
      ".execute-api.eu-west-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "RestAPIDeploymentStagedev1DE74094"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}